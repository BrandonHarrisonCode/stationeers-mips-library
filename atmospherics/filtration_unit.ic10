alias WarningLight d0
alias IC10 d1

alias InputRatio r15
alias InputTemperature r14
alias InputPressure r13
alias OutputPressure r12
alias SafetyPressureExceeded r11
alias WarningLightFlashing r10
alias ResetNeeded r9

define MaxOutputPressure 5000 # kPa
define MaxInputTemperature 425 # K
define MinRatio 0.25 # 25%
define InputSafetyPressure 30000 # kPa

define ColorCarbonDioxide 1 # Grey
define ColorNitrogen 7 # Black
define ColorNitrousOxide 2 # Green
define ColorOxygen 6 # White
define ColorPollutants 5 # Yellow
define ColorVolatiles 4 # Red
define ColorWater 0 # Blue

# Could create a master controller that could control up to 6 atmospherics units.
# This way, I could check each of the atmospherics, and set some value that lets them know what filters they have.
# I don't think I have enough lines to define them here, but I could do it in a separate script.
# 
# define WaterFilter HASH("ItemGasFilterWater")
# define VolatilesFilter HASH("ItemGasFilterVolatiles")
# define PollutantsFilter HASH("ItemGasFilterPollutants")
# define OxygenFilter HASH("ItemGasFilterOxygen")
# define NitrousOxideFilter HASH("ItemGasFilterNitrousOxide")
# define NitrogenFilter HASH("ItemGasFilterNitrogen")
# define CarbonDioxideFilter HASH("ItemGasFilterCarbonDioxide")

# define WaterFilterM HASH("ItemGasFilterWaterM")
# define VolatilesFilterM HASH("ItemGasFilterVolatilesM")
# define PollutantsFilterM HASH("ItemGasFilterPollutantsM")
# define OxygenFilterM HASH("ItemGasFilterOxygenM")
# define NitrousOxideFilterM HASH("ItemGasFilterNitrousOxideM")
# define NitrogenFilterM HASH("ItemGasFilterNitrogenM")
# define CarbonDioxideFilterM HASH("ItemGasFilterCarbonDioxideM")

# define WaterFilterL HASH("ItemGasFilterWaterL")
# define VolatilesFilterL HASH("ItemGasFilterVolatilesL")
# define PollutantsFilterL HASH("ItemGasFilterPollutantsL")
# define OxygenFilterL HASH("ItemGasFilterOxygenL")
# define NitrousOxideFilterL HASH("ItemGasFilterNitrousOxideL")
# define NitrogenFilterL HASH("ItemGasFilterNitrogenL")
# define CarbonDioxideFilterL HASH("ItemGasFilterCarbonDioxideL")

init:
s db On 1
bdns WarningLight start
s WarningLight On 0

start:
	yield
	l InputRatio db RatioCarbonDioxideInput
	# l InputRatio db RatioNitrogenInput
	# l InputRatio db RatioNitrousOxideInput
	# l InputRatio db RatioOxygenInput
	# l InputRatio db RatioPollutantInput
	# l InputRatio db RatioVolatilesInput
	# l InputRatio db RatioWaterInput
	sgt InputRatio InputRatio MinRatio
	l InputPressure db PressureInput
	l OutputPressure db PressureOutput
	slt OutputPressure OutputPressure MaxOutputPressure
	l InputTemperature db TemperatureInput
	slt InputTemperature InputTemperature MaxInputTemperature
	sgt SafetyPressureExceeded InputPressure InputSafetyPressure
	and r0 OutputPressure InputRatio
	and r0 r0 InputTemperature
	or r0 r0 SafetyPressureExceeded
	s db Mode r0
	
	filterCheck:
	ls r0 db 0 Quantity
	ls r1 db 1 Quantity
	min r0 r0 r1
	move r1 WarningLightFlashing
	seqz WarningLightFlashing r0
	xor r2 WarningLightFlashing r1
	move ResetNeeded r2
	
	warningLight:
	bdns WarningLight filterScreen
	l r0 WarningLight On
	seqz r0 r0
	and r0 r0 WarningLightFlashing
	beqz WarningLightFlashing filterScreen
	s WarningLight Color ColorCarbonDioxide # Grey
	# s WarningLight Color ColorNitrogen # Black
	# s WarningLight Color ColorNitrousOxide # Green
	# s WarningLight Color ColorOxygen # White
	# s WarningLight Color ColorPollutants # Yellow
	# s WarningLight Color ColorVolatiles # Red
	# s WarningLight Color ColorWater # Blue
	s WarningLight On r0
	
	filterScreen:
	bdns IC10 start
	ls r0 db 0 PrefabHash
	ls r1 db 1 PrefabHash
	select r0 r0 r0 r1
	l r1 IC10 Setting
	beqz WarningLightFlashing checkreset
s IC10 Setting r0 
j start

checkreset:
select r0 ResetNeeded -1 r1
move ResetNeeded 0
s IC10 Setting r0
j start