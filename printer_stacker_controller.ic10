define AutolatheHash HASH("StructureAutolathe")
define ElectronicsPrinterHash HASH("StructureElectronicsPrinter")
define HydraulicPipeBenderHash HASH("StructureHydraulicPipeBender")
define ToolManufactoryHash HASH("StructureToolManufactory")
define StackerHash HASH("StructureStacker")
define AutolatheStacker HASH("Autolathe Stacker")
define ElectronicsPrinterStacker HASH("Electronics Printer Stacker")
define HydraulicPipeBenderStacker HASH("Hydraulic Pipe Bender Stacker")
define ToolManufactoryStacker HASH("Tool Manufactory Stacker")

alias counter r15
alias print r14
alias stack r13
alias lasthash r0
alias currenthash r1
alias setting r2
alias deviceExists r3

define MAXDEVICES 4 # The total number of printers that exist in the game / defined in the init section below
define INGOTSIZE 500
define INTERNALSLOT 2

init:
push AutolatheHash
push AutolatheStacker
lb lasthash AutolatheHash RecipeHash Minimum
push lasthash
sb AutolatheHash ClearMemory 1
push ElectronicsPrinterHash
push ElectronicsPrinterStacker
lb lasthash ElectronicsPrinterHash RecipeHash Minimum
push lasthash
sb ElectronicsPrinterHash ClearMemory 1
push HydraulicPipeBenderHash
push HydraulicPipeBenderStacker
lb lasthash HydraulicPipeBenderHash RecipeHash Minimum
push lasthash
sb HydraulicPipeBenderHash ClearMemory 1
push ToolManufactoryHash
push ToolManufactoryStacker
lb lasthash ToolManufactoryHash RecipeHash Minimum
push lasthash
sb ToolManufactoryHash ClearMemory 1

start:
	move counter 0
	move sp 1 # Stacks start at 1
	
	# Loop through all pairs of printers and stackers and give a tick to handle power changes before handling logic changes
	logic:
	peek print
	add sp sp 1
	peek stack
	add sp sp 1
	
	lb deviceExists print PrefabHash Maximum
	beqz deviceExists logicInc # Continue if printer does not exist
	lbn deviceExists StackerHash stack PrefabHash Maximum
	beqz deviceExists logicInc # Continue if stacker does not exist
	
	# Turn on stacker if printer is on
	lb setting print On Minimum
	sbn StackerHash stack On setting
	
	lb r0 print Open Minimum
	lbn r1 StackerHash stack Setting Minimum
	
	# If printer is open (ejecting ingots), set stacker to 500
	select r2 r0 INGOTSIZE r1
	sbn StackerHash stack Setting r2
	
	# Constantly clear stacker if ejecting
	seq r3 r2 INGOTSIZE
lbns r4 StackerHash stack INTERNALSLOT Occupied Minimum # Only if something is in the stacker 
	and r3 r3 r4
	sbn StackerHash stack Activate r3
	
	# If printer is closed but stacker is set to 500, set it to 1
	seq r3 r1 INGOTSIZE
	seqz r4 r0
	and r3 r3 r4 # 1 if stacker should be reset, 0 if nothing should happen
	select r2 r3 1 r2
	sbn StackerHash stack Setting r2
	
	lb currenthash print RecipeHash Minimum
	pop lasthash
	push currenthash
	sne setting lasthash currenthash
	sb print ClearMemory setting
	sbn StackerHash stack Activate setting
	
	lbn r0 StackerHash stack Setting Minimum
	lb r1 print ExportCount Minimum
	
	blt r1 r0 logicInc # If still more to print, continue
	
	# Export count has been reached, stop the printer
	sb print Activate 0
	sb print ClearMemory 1
	
	# Increment device counter
	logicInc:
	add sp sp 1
	add counter counter 1
	mod r0 counter 
	yield
	ble counter MAXDEVICES logic
j start